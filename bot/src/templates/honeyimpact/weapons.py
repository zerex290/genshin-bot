from typing import Optional, List

from ...models.honeyimpact import weapons


def format_information(weapon: Optional[weapons.Information]) -> str:
    if weapon is None:
        return '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!'

    return (
        f"üñº–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n"
        f"üî´–û—Ä—É–∂–∏–µ: {weapon.name}\n"
        f"‚öî–¢–∏–ø: {weapon.type}\n"
        f"üí´–†–µ–¥–∫–æ—Å—Ç—å: {weapon.rarity}‚≠ê\n"
        f"üî®{weapon.primary_stat_title}: {weapon.primary_stat_value}\n"
        f"üî®{weapon.secondary_stat_title}: {weapon.secondary_stat_value}\n"
        f"üìñ–û–ø–∏—Å–∞–Ω–∏–µ: {weapon.description}"
    )


def format_ability(ability: Optional[weapons.Ability]) -> str:
    if ability is None:
        return '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!'

    return (
        f"üìã–ü–∞—Å—Å–∏–≤–Ω–∞—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å:\n"
        f"‚ú®–ù–∞–∑–≤–∞–Ω–∏–µ: {ability.title}\n"
        f"üìñ–û–ø–∏—Å–∞–Ω–∏–µ: {ability.description}"
    )


def format_refinement(refinements: List[weapons.Refinement]) -> str:
    if not refinements:
        return '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!'

    formatted_refinement = ['‚öí–ü—Ä–æ–±—É–∂–¥–µ–Ω–∏–µ –æ—Ä—É–∂–∏—è:']
    for r in refinements:
        formatted_refinement.append(
            f"‚Ä¢ –õ–≤ {r.level}: {r.description}"
        )
    return '\n'.join(formatted_refinement)


def format_story(story: str) -> str:
    return '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!' if not story else f"üìö–ò—Å—Ç–æ—Ä–∏—è –æ—Ä—É–∂–∏—è:\n{story}"
